'use strict'

const report = (module.exports = {})

// Supported Versions
report.supports = '^5.0.0 || ^5.0.0-alpha || ^5.0.0-beta'

// Output formatted results
report.results = results => {
  const types = {
    error: '✖',
    notice: '◆',
    unknown: '›',
    warning: '▲'
  }

  var message = `${results.options.label}\n===\n`

  message += `* **Page Title:** ${results.documentTitle}\n`
  message += `* **URL:** [${results.pageUrl}](${results.pageUrl})\n`
  message += `* **Date:** ${results.date}\n\n`

  if (results.total.all === 0) {
    message += 'No Accessibility Issues Detected\n---\n'
  } else {
    message += `Test Results (${results.total.all})\n---\n`

    let group
    let counter = 0

    for (let i = 0; i < results.issues.length; i++) {
      const issue = results.issues[i]

      const selector = issue.selector ? '`' + issue.selector + '`' : null
      const context = issue.context ? '`' + issue.context + '`' : null
      const type = issue.type.charAt(0).toUpperCase() + issue.type.slice(1)

      let row = []

      // Group Reports By Type
      if (!group || group !== issue.type) {
        if (group) {
          row.push('</details>\n')
        }

        if (group !== issue.type) {
          group = issue.type
          counter = 0
        }

        row.push(`<details>\n<summary>${type}s: ${results.total[issue.type]}</summary>\n\n`)
      }

      counter++

      row.push(`|#${counter}|${types[issue.type]} ${type}: ${issue.code}|\n|---:|:---|`, `|**Message**|${issue.message}|`)

      if (issue.context) {
        row.push(`|**Context**|${context}|`)
      }

      if (issue.selector) {
        row.push(`|**Selector**|${selector}|`)
      }

      if (issue.resources) {
        let links = []

        issue.resources.forEach(link => {
          links.push(`[${link.type} ${link.label}](${link.url})`)
        })

        row.push(`|**Resources**|${links.join(', ')}|`)
      }

      row.push('\n')

      message += row.join('\n')
    }

    message += '</details>\n\n'
  }

  message += `**Generated by:** [Red Van Workshop - Accessibility Tester](https://github.com/redvanworkshop/accessibility-tester)`

  return message
}

// Output error messages
report.error = message => {
  return message
}
